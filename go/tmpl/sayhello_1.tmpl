<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Hello</title>
</head>
<body>
    <p>Hello {{.Name}}</p>
    <p>性别 {{.Gender}}</p>
    <p>年龄 {{.Age}}</p>
    {{/* 这是一段注释,可以多行，不能嵌套，并且必须紧贴分界符始止 */}}
    <h3>一、pipe</h3>
    <p>
    	pipeline是指产生和传递数据的操作，比如上面常用的模版界定符，当然还支持|符号链接多个命令。和unix管道类似，|前面的命令会将运算结果(返回值)传递给后一个命令直到最后一个为止。
    </p>
    <h3>二、变量声明</h3>
    <p>
    	我们还可以在模版中声明变量，用来保存传入模版的数据或其他语句生成的结果。语法如下
    	<pre>$obj:={{.}}</pre>
    	其中$obj是变量的名称，后续代码会用到。
    </p>
    <h3>三、移除空格</h3>
    <p><pre>
    {{- .Name -}} //移除空格
    </pre></p>
    <h3>四、条件判断</h3>

    <p>
    把下面的中括号都换成大括号再次使用
    <pre>
    [[if .Name]] T1 [[end]]
    [[if .Name]] T1 [[else]] T0 [[end]]
    [[if .Name]] T1 [[else if .Name]] T0 [[end]]

    //使用range关键字进行遍历，有两种写法，其中pipeline的值必须是数组、切片、字典或者通道
    [[range pipeline]] T1 [[end]]
    [[range pipeline]] T1 [[else]] T0 [[end]]

    //with
    [[with pipeline]] T1 [[end]]
    如果pipeline为empty不产生输出，否则将dot设为pipeline的值并执行T1.不修改外面的dot
    [[with pipeline]] T1 [[else]] TO [[end]]
    如果pipeline为empty,不改变dot并执行T0，否则将dot设为pipeline的值并执行T1

    //预定于函数
    1、预定义全局函数
    and 函数返回他的第一个empty参数或者最后一个参数，就是说"and x y"等价于"if x then y else z",所有参数都会执行
    or 函数返回他的第一个非empty参数或者最后一个参数，亦或"or x y"等价于"if x then x else y",所有参数都会执行
    not 返回它的单个参数的布尔值的否定
	len 返回它的参数的整数类型长度
	index 执行结果为第一个参数以剩下的参数为索引/键指向的值；如"index x 1 2 3"返回x[1][2][3]的值；每个被索引的主体必须是数组、切片或者字典。
	print 即fmt.Sprint
	printf 即fmt.Sprintf
	println 即fmt.Sprintln
	html 返回与其参数的文本表示形式等效的转义HTML。这个函数在html/template中不可用。
	urlquery 以适合嵌入到网址查询中的形式返回其参数的文本表示的转义值。这个函数在html/template中不可用。
	js 返回与其参数的文本表示形式等效的转义JavaScript。
	call 执行结果是调用第一个参数的返回值，该参数必须是函数类型，其余参数作为调用该函数的参数；如"call .X.Y 1 2"等价于go语言里的dot.X.Y(1, 2)；其中Y是函数类型的字段或者字典的值，或者其他类似情况；call的第一个参数的执行结果必须是函数类型的值（和预定义函数如print明显不同）；1该函数类型值必须有1到2个返回值，如果有2个则后一个必须是error接口类型；如果有2个返回值的方法返回的error非nil，模板执行会中断并返回给调用模板执行者该错误；


	2、Bool比较函数
	eq      如果arg1 == arg2则返回真
	ne      如果arg1 != arg2则返回真
	lt      如果arg1 < arg2则返回真
	le      如果arg1 <= arg2则返回真
	gt      如果arg1 > arg2则返回真
	ge      如果arg1 >= arg2则返回真
    
为了简化多参数相等检测，eq（只有eq）可以接受2个或更多个参数，它会将第一个参数和其余参数依次比较，返回下式的结果：

[[eq arg1 arg2 arg3]]
比较函数只适用于基本类型（或重定义的基本类型，如”type Celsius float32”）。但是，整数和浮点数不能互相比较。
    
    </pre></p>
</body>
</html>